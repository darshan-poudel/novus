"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeBootBuildImageGradleTask = void 0;
const devkit_1 = require("@nx/devkit");
const common_jvm_1 = require("@nxrocks/common-jvm");
function removeBootBuildImageGradleTask(tree, options) {
    if (options.projectType === 'library' &&
        (options.buildSystem === 'gradle-project' ||
            options.buildSystem === 'gradle-project-kotlin')) {
        devkit_1.logger.debug(`Removing 'bootBuildImage' gradle task on a library project...`);
        const taskToRemove = options.buildSystem === 'gradle-project-kotlin' ?
            (0, common_jvm_1.stripIndent) `
      tasks.bootBuildImage {
      	builder.set("paketobuildpacks/builder-jammy-base:latest")
      }
      `
            :
                (0, common_jvm_1.stripIndent) `
      tasks.named('bootBuildImage') {
      	builder = 'paketobuildpacks/builder-jammy-base:latest'
      }
      `;
        const ext = options.buildSystem === 'gradle-project-kotlin' ? '.kts' : '';
        const buildGradlePath = `${options.projectRoot}/build.gradle${ext}`;
        let content = tree.read(buildGradlePath).toString();
        content = content.replace(taskToRemove, '');
        tree.write(buildGradlePath, content);
    }
}
exports.removeBootBuildImageGradleTask = removeBootBuildImageGradleTask;
//# sourceMappingURL=remove-boot-build-image-gradle-task.js.map