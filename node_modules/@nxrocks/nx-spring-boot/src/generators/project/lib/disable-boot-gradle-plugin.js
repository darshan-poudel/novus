"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.disableBootGradlePlugin = void 0;
const devkit_1 = require("@nx/devkit");
const common_jvm_1 = require("@nxrocks/common-jvm");
const common_jvm_2 = require("@nxrocks/common-jvm");
function disableBootGradlePlugin(tree, options) {
    if (options.projectType === 'library' &&
        (options.buildSystem === 'gradle-project' ||
            options.buildSystem === 'gradle-project-kotlin')) {
        devkit_1.logger.debug(`Disabling 'spring-boot' gradle plugin on a library project...`);
        const disabled = (0, common_jvm_2.disableGradlePlugin)(tree, options.projectRoot, options.language, 'org.springframework.boot', options.buildSystem === 'gradle-project-kotlin');
        if (disabled) {
            const dependencyManagement = options.buildSystem === 'gradle-project-kotlin'
                ? (0, common_jvm_1.stripIndent) `
            dependencyManagement {
            	imports {
            		mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
            	}
            }
            `
                : (0, common_jvm_1.stripIndent) `
            dependencyManagement {
            	imports {
            		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
            	}
            }
            `;
            const ext = options.buildSystem === 'gradle-project-kotlin' ? '.kts' : '';
            const buildGradlePath = `${options.projectRoot}/build.gradle${ext}`;
            let content = tree.read(buildGradlePath).toString();
            content += '\n' + dependencyManagement;
            tree.write(buildGradlePath, content);
        }
    }
    return false;
}
exports.disableBootGradlePlugin = disableBootGradlePlugin;
//# sourceMappingURL=disable-boot-gradle-plugin.js.map