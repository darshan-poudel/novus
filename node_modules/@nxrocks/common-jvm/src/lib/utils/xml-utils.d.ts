import { XMLBuilder } from 'xmlbuilder2/lib/interfaces';
import { SelectedValue, SelectReturnType } from 'xpath';
export declare function readXml(xmlContent: string, ignoreNamespace?: boolean): XMLBuilder;
export declare function findXmlNodes(xml: XMLBuilder, xpath: string, ignoreNamespace?: boolean): SelectReturnType;
export declare function findXmlNode(xml: XMLBuilder, xpath: string, ignoreNamespace?: boolean): SelectedValue | undefined;
export declare function findNodeContent(source: SelectedValue, xpath: string, ignoreNamespace?: boolean): string | null | undefined;
export declare function findXmlContent(xml: XMLBuilder, xpath: string, ignoreNamespace?: boolean): string | null | undefined;
export declare function findXmlContents(xml: XMLBuilder, xpath: string, ignoreNamespace?: boolean): string[];
export declare function hasXmlMatching(xml: XMLBuilder, xpath: string, ignoreNamespace?: boolean): boolean;
export declare function findXmlMatching(xml: XMLBuilder, xpath: string, ignoreNamespace?: boolean): XMLBuilder | null;
export declare function newXmlNode(content: {
    [key: string]: unknown;
} | string): XMLBuilder;
export declare function addXmlNode(target: XMLBuilder, node: {
    [key: string]: unknown;
} | string): XMLBuilder;
export declare function removeXmlNode(nodeToRemove: XMLBuilder): XMLBuilder;
export declare function addXmlElement(target: XMLBuilder, ...elements: (string | {
    name: string;
    attributes?: {
        [key: string]: unknown;
    };
})[]): XMLBuilder;
export declare function isXmlNodeEmpty(xml: XMLBuilder): boolean;
