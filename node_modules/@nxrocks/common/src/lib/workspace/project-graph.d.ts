import { CreateDependenciesContext, CreateNodesContext, CreateNodesResult, ProjectGraph, ProjectGraphProcessorContext, ProjectType, RawProjectGraphDependency, TargetConfiguration } from '@nx/devkit';
import { PackageInfo } from './models';
export declare function getProjectGraph(pluginName: string, projectFilter: (project: {
    root: string;
}) => boolean, getPackageInfo: (project: {
    root: string;
}) => PackageInfo, graph: ProjectGraph, ctx: ProjectGraphProcessorContext): ProjectGraph;
export declare const createNodesFor: <T = unknown>(projectFiles: string[], projectFilter: (project: {
    root: string;
}) => boolean, getProjectTypeAndTargets: (projectFile: string, options?: T | undefined) => {
    projectType: ProjectType;
    targets: {
        [targetName: string]: TargetConfiguration<any>;
    };
}, pluginName: string) => readonly [string, (file: string, options: T, context: CreateNodesContext) => CreateNodesResult];
export declare const createDependenciesIf: (pluginName: string, projectFiles: string[], projectFilter: (project: {
    root: string;
}) => boolean, getPackageInfo: (project: {
    root: string;
}) => PackageInfo, ctx: CreateDependenciesContext) => RawProjectGraphDependency[];
